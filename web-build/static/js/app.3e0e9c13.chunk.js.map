{"version":3,"sources":["src/redux/ReduxStore.js","src/redux/reducers/CartListReducer.js","src/redux/reducers/DimensionReducer.js","src/redux/actions/DimensionAction.js","src/services/Background.js","src/navigation/useLinking.js","src/redux/ReduxConstants.js","src/redux/actions/CartListAction.js","src/services/gqls.js","src/comp/cartComp/CartList.js","src/services/CartUpdate.js","src/comp/common/itemViews/ItemType1.js","src/comp/homescreencomp/subcategory/SubCategory.js","web-build/register-service-worker.js","App.js","src/Application.js","src/navigation/Routes.js","src/screens/CartScreen.js","src/comp/cartComp/MobileLoginBlock.js","src/comp/cartComp/CartItem.js","src/comp/common/quantityViews/QuantityView1.js","src/navigation/BottomTabNavigator.js","components/TabBarIcon.js","constants/Colors.js","src/screens/LinksScreen.js","src/navigation/StoreNavigation.js","src/comp/homescreencomp/HomeScreen.js","src/comp/TrendingRow.js","src/comp/common/quantityViews/QuantityView2.js","src/comp/BannerRow.js","src/comp/homescreencomp/category/CategoryList.js","src/comp/homescreencomp/category/Category.js"],"names":["allReducers","combineReducers","cartReducer","DimensionReducer","store","createStore","initialState","cartList","state","action","type","reduxConstants","CART_LIST","Dimension","window","screen","DIMENSION","Background","props","useEffect","service","setInterval","console","log","JSON","stringify","Cookies","get","clearInterval","View","containerRef","useLinking","prefixes","Linking","makeUrl","config","Root","path","screens","Home","Links","Settings","gql_allCatogries","gql","gql_trendingProducts","gql_SubCategoryProducts","CartList","connect","cart","style","margin","borderWidth","Text","color","fontSize","alignSelf","length","P","rtrQty","cartUpdated","Cart","map","item","index","ProductName","Product","currQty","push","updated","newCart","styles","StyleSheet","create","container","width","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","marginVertical","marginHorizontal","overflow","itemImage","borderColor","ItemType1","cartListAction","useState","quantity","setQuantity","useFocusEffect","productQty","alignItems","justifyContent","padding","position","top","backgroundColor","borderRadius","paddingHorizontal","paddingVertical","zIndex","fontWeight","Image","source","uri","Category","SubCategory","Row","Price","textDecorationLine","parseInt","paddingTop","Breakqty","Unit","Quantity","Add","r","AddToCart","Qty","Remove","RemoveFromCart","route","params","CategoryList","useQuery","variables","loading","error","data","navigation","setOptions","headerStyle","headerTitle","paddingRight","FlatList","horizontal","showsHorizontalScrollIndicator","keyExtractor","renderItem","TouchableOpacity","onPress","replace","textTransform","handleBackPress","backHandler","BackHandler","addEventListener","remove","message","ScrollView","itemDimension","items","allProducts","spacing","flex","navigator","serviceWorker","register","scope","then","info","catch","React","isLoadingComplete","setLoadingComplete","setInitialNavigationState","useRef","getInitialState","async","SplashScreen","preventAutoHide","Font","loadAsync","warn","hide","skipLoadingScreen","client","ApolloClient","cache","InMemoryCache","link","HttpLink","host","credentials","handleAppStateChange","nextAppState","setState","appState","AppState","currentState","this","removeEventListener","Provider","ApolloProvider","Component","Stack","createStackNavigator","NavigationContainer","Navigator","initialRouteName","Screen","name","component","BottomTabNavigator","CartScreen","headerRight","Container","Thumbnail","set","MobileLoginBlock","dimensions","setDimensions","onChange","Dimensions","MobStyles","PcStyles","ComStyles","_ListItem","ListItem","thumbnail","Left","square","Body","note","numberOfLines","Right","QuantityView1","qty","CartItems","Content","List","key","Col","FontAwesome","Button","transparent","navigate","Icon","BottomTab","StoreNavigation","options","title","tabBarIcon","focused","LinksScreen","createBottomTabNavigator","Ionicons","size","marginBottom","Colors","tabIconSelected","tabIconDefault","tintColor","tabBar","errorBackground","errorText","warningBackground","warningText","noticeBackground","noticeText","HomeScreen","Homescreen","headerShown","onDimensionChange","navigationOptions","header","istate","TrendingRow","marginTop","marginLeft","head","AddView","add","ItemAddView","RemoveButton","centerText","amountText","AddButton","flexDirection","alignContent","textAlign","button","carouselItems","text","BannerRow","layout","ref","carousel","sliderWidth","itemWidth","_renderItem","marginRight","allCategories","Accordion","dataArray","animation","expanded","renderHeader","Item","borderLeftWidth","renderContent"],"mappings":"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","file":"static/js/app.3e0e9c13.chunk.js","sourcesContent":["import { createStore, combineReducers } from \"redux\";\r\nimport { cartReducer } from \"./reducers/CartListReducer\";\r\nimport { DimensionReducer } from \"./reducers/DimensionReducer\";\r\n\r\nconst allReducers = combineReducers({\r\n  cartReducer,\r\n  DimensionReducer\r\n});\r\nexport const store = createStore(allReducers);\r\n","import {reduxConstants} from '../ReduxConstants';\r\n\r\nconst initialState = {\r\n  cartList: [],\r\n};\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case reduxConstants.CART_LIST:\r\n      return action.cartList;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { reduxConstants } from \"../ReduxConstants\";\r\n\r\nconst initialState = {\r\n  Dimension: { window: 0, screen: 0 }\r\n};\r\n\r\nexport const DimensionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case reduxConstants.DIMENSION:\r\n      return action.Dimension;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { reduxConstants } from \"../ReduxConstants\";\r\n\r\nexport const DimensionAction = Dimension => {\r\n  return {\r\n    type: reduxConstants.DIMENSION,\r\n    Dimension: Dimension\r\n  };\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {View} from 'react-native';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport default Background = (props) => {\r\n  useEffect(() => {\r\n    const service = setInterval(() => {\r\n      console.log('^^^^' + JSON.stringify(Cookies.get('test1')));\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(service);\r\n    };\r\n  });\r\n\r\n  return <View></View>;\r\n};\r\n","import { useLinking } from \"@react-navigation/native\";\r\nimport { Linking } from \"expo\";\r\n\r\nexport default function(containerRef) {\r\n  return useLinking(containerRef, {\r\n    prefixes: [Linking.makeUrl(\"/\")],\r\n    config: {\r\n      Root: {\r\n        path: \"root\",\r\n        screens: {\r\n          Home: \"home\",\r\n          Links: \"links\",\r\n          Settings: \"settings\"\r\n        }\r\n      }\r\n    }\r\n  });\r\n}\r\n","export const reduxConstants = {\r\n  CART_LIST: 'CART_LIST',\r\n  DIMENSION: 'DIMENSION',\r\n};\r\n","import {reduxConstants} from '../ReduxConstants';\r\n\r\nexport const cartListAction = (cartList) => {\r\n  return {\r\n    type: reduxConstants.CART_LIST,\r\n    cartList: cartList,\r\n  };\r\n};\r\n","import {gql} from '@apollo/client';\r\nimport SubCategory from '../comp/homescreencomp/subcategory/SubCategory';\r\n\r\nexport const gql_allCatogries = gql`\r\n  {\r\n    allCategories {\r\n      Category\r\n      SubCategory {\r\n        SubCategory\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const gql_trendingProducts = gql`\r\n  {\r\n    allProducts(where: {isTrending_gt: 0}) {\r\n      ProductName\r\n      Category\r\n      SubCategory\r\n      Price\r\n      Breakqty\r\n      isTrending\r\n      Unit\r\n    }\r\n  }\r\n`;\r\n\r\nexport const gql_SubCategoryProducts = gql`\r\n  query Products($SubCategory: String!) {\r\n    allProducts(where: {SubCategory: $SubCategory}) {\r\n      ProductName\r\n      Category\r\n      SubCategory\r\n      Price\r\n      Breakqty\r\n      isTrending\r\n      Unit\r\n    }\r\n  }\r\n`;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {View, Text} from 'react-native';\r\nimport CartItems from './CartItem';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Cartlist = (props) => {\r\n  return (\r\n    <View style={{margin: '0vw', borderWidth: 0}}>\r\n      <Text style={{color: '#aaa', fontSize: 15, alignSelf: 'center'}}>\r\n        You have {props.cart.length ? props.cart.length : 0} Items in your cart\r\n      </Text>\r\n      <CartItems />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CartList = connect((state) => ({\r\n  cart: state.cartReducer.cartList,\r\n}))(Cartlist);\r\n","import {CartList} from '../comp/cartComp/CartList';\r\nimport {cartListAction} from '../redux/actions/CartListAction';\r\n\r\n/**\r\n * @param {, Product, Cart, Qty}\r\n *    - props\r\n *        -- Product : Product to add\r\n *        -- Cart    : Current cartList\r\n *        -- Qty     : Quantity to add(default : 1)\r\n */\r\nexport const AddToCart = (props) => {\r\n  let cartList = [];\r\n  let cartUpdated = false;\r\n  let P, rtrQty;\r\n  props.Cart.map((item, index) => {\r\n    if (item.ProductName == props.Product.ProductName) {\r\n      item.currQty++;\r\n      P = item;\r\n      cartUpdated = true;\r\n      cartList.push(item);\r\n    } else {\r\n      cartList.push(item);\r\n    }\r\n  });\r\n  if (!cartUpdated) {\r\n    P = Object.assign({}, props.Product);\r\n    if (P.currQty >= 0) P.currQty++;\r\n    else P['currQty'] = 1;\r\n    cartList.push(P);\r\n    cartUpdated = true;\r\n  }\r\n  rtrQty = P.currQty;\r\n  return {cartList: cartList, updated: cartUpdated, rtrQty: rtrQty};\r\n};\r\n\r\n/**\r\n * @param {, Cart, Qty, ProductName} props\r\n *  - Props\r\n *    -- ProductName : ProductName for the Product to be removed\r\n *    -- Cart        : Current cartList\r\n *    -- Qty         : Quantity to remove(default : 1)\r\n *\r\n * @returns {, CartList:Array, updated:Boolean}\r\n */\r\nexport const RemoveFromCart = (props) => {\r\n  let cartList = props.Cart;\r\n  let cartUpdated = false;\r\n  let P, rtrQty;\r\n  let newCart = [];\r\n  cartList.map((item, index) => {\r\n    if (item.ProductName == props.ProductName) {\r\n      P = item;\r\n      if (item.currQty >= 1) {\r\n        item.currQty--;\r\n        P = item;\r\n        if (item.currQty > 0) {\r\n          newCart.push(item);\r\n          rtrQty = item.currQty;\r\n        }\r\n        cartUpdated = true;\r\n      } else {\r\n        cartUpdated = true;\r\n      }\r\n    } else {\r\n      newCart.push(item);\r\n    }\r\n  });\r\n  if (!cartUpdated) {\r\n    cartUpdated = false;\r\n  }\r\n  return {cartList: newCart, updated: cartUpdated, rtrQty: rtrQty};\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\nimport {View, StyleSheet, Text, Image} from 'react-native';\r\nimport QuantityView2 from '../quantityViews/QuantityView2';\r\nimport {Row} from 'native-base';\r\nimport {connect} from 'react-redux';\r\nimport {cartListAction} from '../../../redux/actions/CartListAction';\r\nimport {useFocusEffect} from '@react-navigation/native';\r\nimport {AddToCart, RemoveFromCart} from '../../../services/CartUpdate';\r\n\r\nconst Itemtype1 = (props) => {\r\n  const [quantity, setQuantity] = useState(0);\r\n\r\n  useFocusEffect(() => {\r\n    //console.log('focus');\r\n    return () => {};\r\n  });\r\n\r\n  useEffect(() => {\r\n    //Effect\r\n    console.log('effect');\r\n    let productQty = 0;\r\n    props.cart.map((item, index) => {\r\n      if (item.ProductName == props.item.ProductName) {\r\n        productQty = item.currQty ? item.currQty : 0;\r\n      }\r\n    });\r\n    setQuantity(productQty);\r\n    return () => {\r\n      //CleanUp\r\n    };\r\n  });\r\n\r\n  const Add = () => {\r\n    let r = AddToCart({\r\n      Product: props.item,\r\n      Cart: props.cart,\r\n      Qty: 1,\r\n    });\r\n    //setQuantity(r.rtrQty ? r.rtrQty : 0);\r\n    props.cartListAction({cartList: r.cartList});\r\n  };\r\n\r\n  const Remove = () => {\r\n    let r = RemoveFromCart({\r\n      Cart: props.cart,\r\n      Qty: 1,\r\n      ProductName: props.item.ProductName,\r\n    });\r\n    //setQuantity(r.rtrQty ? r.rtrQty : 0);\r\n    props.cartListAction({cartList: r.cartList});\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View\r\n        style={{\r\n          width: '100%',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          padding: 10,\r\n        }}>\r\n        <View\r\n          style={{\r\n            position: 'absolute',\r\n            top: 2,\r\n            alignSelf: 'flex-start',\r\n            backgroundColor: '#0a0',\r\n            borderRadius: 10,\r\n            paddingHorizontal: 4,\r\n            paddingVertical: 2,\r\n            zIndex: 2,\r\n          }}>\r\n          <Text style={{fontSize: 10, fontWeight: '600', color: '#fff'}}>\r\n            15% off\r\n          </Text>\r\n        </View>\r\n        <View style={styles.itemImage}>\r\n          <Image\r\n            style={{width: 120, height: 80}}\r\n            source={{\r\n              uri:\r\n                'http://localhost:3000/static/images/productImages/' +\r\n                props.item.Category +\r\n                '/' +\r\n                props.item.SubCategory +\r\n                '/' +\r\n                props.item.ProductName +\r\n                '.png',\r\n            }}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View>\r\n        <Row>\r\n          <Text\r\n            style={{\r\n              paddingHorizontal: 8,\r\n              fontSize: 14,\r\n              fontWeight: '700',\r\n              color: '#777',\r\n            }}>\r\n            {props.item.Price}\r\n          </Text>\r\n          <Text\r\n            style={{\r\n              textDecorationLine: 'line-through',\r\n              fontSize: 10,\r\n              fontWeight: '600',\r\n              color: '#aaa',\r\n              alignSelf: 'flex-end',\r\n            }}>\r\n            {parseInt(props.item.Price) + 5}\r\n          </Text>\r\n        </Row>\r\n        <Row>\r\n          <Text\r\n            style={{\r\n              paddingHorizontal: 8,\r\n              paddingTop: 2,\r\n              fontSize: 12,\r\n              fontWeight: '700',\r\n              color: '#777',\r\n              height: 30,\r\n              borderWidth: 0,\r\n            }}>\r\n            {props.item.ProductName}\r\n          </Text>\r\n        </Row>\r\n        <Row>\r\n          <Text\r\n            style={{\r\n              paddingHorizontal: 8,\r\n              paddingTop: 2,\r\n              fontSize: 10,\r\n              fontWeight: '600',\r\n              color: '#777',\r\n            }}>\r\n            {props.item.Breakqty + ' ' + props.item.Unit}\r\n          </Text>\r\n        </Row>\r\n      </View>\r\n      <QuantityView2 Quantity={quantity} Add={Add} Remove={Remove} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: 150,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 4,\r\n    },\r\n    shadowOpacity: 0.32,\r\n    shadowRadius: 5.46,\r\n    elevation: 9,\r\n    marginVertical: 10,\r\n    marginHorizontal: 5,\r\n    overflow: 'hidden',\r\n    alignSelf: 'center',\r\n  },\r\n  itemImage: {\r\n    height: 80,\r\n    width: 120,\r\n    borderWidth: 0,\r\n    borderColor: '#0f0',\r\n  },\r\n});\r\n\r\n//export default ItemType1;\r\nexport default ItemType1 = connect(\r\n  (state) => ({\r\n    cart: state.cartReducer.cartList,\r\n  }),\r\n  {cartListAction},\r\n)(Itemtype1);\r\n","import React, {useEffect} from 'react';\r\nimport {Text, View, ScrollView, FlatList, BackHandler} from 'react-native';\r\nimport GridView from 'react-native-super-grid';\r\nimport ItemType1 from '../../common/itemViews/ItemType1';\r\nimport {TouchableOpacity} from 'react-native-gesture-handler';\r\n//-->GQL Imports\r\nimport {useQuery} from '@apollo/client';\r\nimport {gql_SubCategoryProducts} from '../../../services/gqls';\r\n\r\nexport default SubCategory = (props) => {\r\n  const {CategoryList, SubCategory} = props.route.params;\r\n  const {loading, error, data} = useQuery(gql_SubCategoryProducts, {\r\n    variables: {SubCategory: SubCategory.SubCategory},\r\n  });\r\n\r\n  useEffect(() => {\r\n    //effect\r\n    //console.log('%%' + SubCategory.SubCategory);\r\n    return () => {\r\n      //cleanup\r\n    };\r\n  });\r\n\r\n  props.navigation.setOptions({\r\n    headerStyle: {\r\n      padding: 0,\r\n      margin: 0,\r\n    },\r\n    headerTitle: () => (\r\n      <View\r\n        style={{\r\n          width: '100vw',\r\n          paddingRight: 100,\r\n        }}>\r\n        <FlatList\r\n          horizontal\r\n          showsHorizontalScrollIndicator={false}\r\n          data={CategoryList}\r\n          keyExtractor={(item, index) => 'key' + index}\r\n          renderItem={({item, index}) => {\r\n            return (\r\n              <TouchableOpacity\r\n                style={{paddingVertical: 10}}\r\n                onPress={() => {\r\n                  console.log(JSON.stringify(item.SubCategory));\r\n                  props.navigation.replace('SubCategory', {\r\n                    SubCategory: {SubCategory: item.SubCategory},\r\n                    CategoryList: CategoryList,\r\n                  });\r\n                }}>\r\n                <Text\r\n                  style={{\r\n                    color: '#aaa',\r\n                    fontWeight: '600',\r\n                    textTransform: 'uppercase',\r\n                    padding: 10,\r\n                  }}>\r\n                  {item.SubCategory}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            );\r\n          }}\r\n        />\r\n      </View>\r\n    ),\r\n  });\r\n\r\n  const handleBackPress = () => {\r\n    console.log('go back');\r\n    //this.goBack(); // works best when the goBack is async\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    //effect\r\n    const backHandler = BackHandler.addEventListener(\r\n      'hardwareBackPress',\r\n      handleBackPress,\r\n    );\r\n    return () => {\r\n      //cleanup\r\n      backHandler.remove();\r\n    };\r\n  });\r\n\r\n  if (loading)\r\n    return (\r\n      <View>\r\n        <Text>Loading...</Text>\r\n      </View>\r\n    );\r\n  if (error)\r\n    return (\r\n      <View>\r\n        <Text>{JSON.stringify(error.message)}</Text>\r\n      </View>\r\n    );\r\n  return (\r\n    <ScrollView>\r\n      <View\r\n        style={{\r\n          backgroundColor: '#fff',\r\n          borderWidth: 0,\r\n        }}>\r\n        {/* <Text>{props.route.params.SubCategory.SubCategory}</Text> */}\r\n        <GridView\r\n          itemDimension={150}\r\n          items={data.allProducts}\r\n          spacing={10}\r\n          style={{flex: 1}}\r\n          renderItem={(item, index) => <ItemType1 item={item.item} />}\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","/**\r\n * FreshKick Expo App\r\n * https://freshkick.com/Home\r\n *\r\n * @flow\r\n */\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport Application from \"./src/Application\";\r\nimport { SplashScreen } from \"expo\";\r\nimport * as Font from \"expo-font\";\r\nimport useLinking from \"./src/navigation/useLinking\";\r\n\r\nconst App = props => {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n  const [initialNavigationState, setInitialNavigationState] = React.useState();\r\n  const containerRef = React.useRef();\r\n  const { getInitialState } = useLinking(containerRef);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHide();\r\n\r\n        // Load our initial navigation state\r\n        setInitialNavigationState(await getInitialState());\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          /* ...Ionicons.font,\r\n          \"space-mono\": require(\"./assets/fonts/SpaceMono-Regular.ttf\") */\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hide();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n  //console.disableYellowBox = true;\r\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\r\n    return null;\r\n  } else {\r\n    return <Application />;\r\n  }\r\n};\r\n\r\nexport default App;\r\n","import React, {Component} from 'react';\r\nimport {AppState} from 'react-native';\r\nimport AppStackNavigator from './navigation/Routes';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './redux/ReduxStore';\r\nimport {DimensionAction} from './redux/actions/DimensionAction';\r\nimport {\r\n  ApolloProvider,\r\n  ApolloClient,\r\n  HttpLink,\r\n  InMemoryCache,\r\n} from '@apollo/client';\r\nimport Background from './services/Background';\r\n\r\nconst host = 'http://192.168.1.6';\r\n//const host = 'http://192.168.1.90';\r\n//const host = 'http://localhost';\r\n\r\n//Apollo Client Configuration\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  /* ApolloLink.from([\r\n    onError(({graphQLErrors, networkError}) => {\r\n      if (graphQLErrors)\r\n        graphQLErrors.forEach(({message, locations, path}) =>\r\n          console.log(\r\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\r\n          ),\r\n        );\r\n      if (networkError) console.log(`[Network error]: ${networkError}`);\r\n    }), */\r\n  link: new HttpLink({\r\n    uri: host + ':3000/admin/api',\r\n    credentials: 'same-origin',\r\n  }),\r\n  /* ]), */\r\n});\r\n\r\nclass Application extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      appState: AppState.currentState,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AppState.addEventListener('change', this.handleAppStateChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    AppState.removeEventListener('change', this.handleAppStateChange);\r\n  }\r\n\r\n  handleAppStateChange = (nextAppState) => {\r\n    this.setState({appState: nextAppState});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <ApolloProvider client={client}>\r\n          <Background />\r\n          <AppStackNavigator />\r\n        </ApolloProvider>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Application;\r\n","import 'react-native-gesture-handler';\r\nimport React from 'react';\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createStackNavigator} from '@react-navigation/stack';\r\nimport CartScreen from '../screens/CartScreen';\r\nimport BottomTabNavigator from './BottomTabNavigator';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst AppStackNavigator = (props) => {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"BottomTabNavigator\">\r\n        <Stack.Screen\r\n          name=\"BottomTabNavigator\"\r\n          component={BottomTabNavigator}\r\n        />\r\n        <Stack.Screen name=\"Cart\" component={CartScreen} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default AppStackNavigator;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {View, Text} from 'react-native';\r\nimport {Row, Container, Thumbnail, Button} from 'native-base';\r\nimport {MobileLoginBlock} from '../comp/cartComp/MobileLoginBlock';\r\nimport CartList from '../comp/cartComp/CartList';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport useAxios from 'axios-hooks';\r\n\r\nexport default function CartScreen({navigation, route}) {\r\n  navigation.setOptions({\r\n    headerTitle: (props) => (\r\n      <View style={{paddingRight: 5}}>\r\n        <Row>\r\n          <Text style={{fontWeight: 'bold', fontSize: 20, color: '#7a0'}}>\r\n            Cart\r\n          </Text>\r\n        </Row>\r\n        <Row>\r\n          <Text style={{color: '#aaa'}}>\r\n            Total Cart Value is <Text style={{color: '#0aa'}}>Rs:737</Text>\r\n          </Text>\r\n        </Row>\r\n      </View>\r\n    ),\r\n    headerRight: () => (\r\n      <Container\r\n        style={{\r\n          justifyContent: 'center',\r\n          paddingHorizontal: 15,\r\n          borderWidth: 0,\r\n        }}>\r\n        <Thumbnail\r\n          style={{padding: 10}}\r\n          source={{\r\n            uri:\r\n              'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885_960_720.jpg',\r\n          }}\r\n        />\r\n      </Container>\r\n    ),\r\n  });\r\n\r\n  const [result, setResult] = React.useState(null);\r\n  /* const [{data, loading, error}, refetch] = useAxios(\r\n    'http://192.168.1.90:3000/test',\r\n  ); */\r\n\r\n  useEffect(() => {\r\n    Cookies.set('test', '<Text>{data2)}</Text>');\r\n    return () => {\r\n      //cleanup;\r\n    };\r\n  });\r\n\r\n  return (\r\n    <View>\r\n      <MobileLoginBlock />\r\n      {/* <View style={{width: '100%', alignItems: 'center'}}>\r\n        <Text>{data && JSON.stringify(data, null, 2)}</Text>\r\n        <Text>{error && JSON.stringify(error, null, 2)}</Text>\r\n        <Text>{loading && JSON.stringify(loading, null, 2)}</Text>\r\n      </View> */}\r\n      <CartList />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst getAllProducts = async () => {\r\n  return new Promise(async (resolve, reject) => {\r\n    await axios\r\n      .get(\r\n        'http://localhost:3000/',\r\n        {},\r\n        {\r\n          timeout: 2000,\r\n        },\r\n      )\r\n      .then((response) => {\r\n        let c = Cookies.get('test');\r\n        console.log('++++++++++++++' + c);\r\n\r\n        console.log(\r\n          'axios response-- ' +\r\n            'LoginAPI_status::' +\r\n            response.status +\r\n            'LoginAPI_body::' +\r\n            response.data,\r\n        );\r\n        resolve(response);\r\n        //cbRes(\"pass\")\r\n      })\r\n      .catch((error) => {\r\n        console.log('axios error:', error);\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {View, Text, StyleSheet, Dimensions} from 'react-native';\r\n\r\nexport const MobileLoginBlock = (props) => {\r\n  const [dimensions, setDimensions] = useState({window, screen});\r\n\r\n  const onChange = ({window, screen}) => {\r\n    console.log(dimensions);\r\n    setDimensions({window, screen});\r\n  };\r\n\r\n  useEffect(() => {\r\n    //effect\r\n    Dimensions.addEventListener('change', onChange);\r\n    return () => {\r\n      //cleanup\r\n      Dimensions.removeEventListener('change', onChange);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        dimensions.window.width < 500\r\n          ? MobStyles.container\r\n          : PcStyles.container,\r\n        ComStyles.container,\r\n      ]}>\r\n      <View>\r\n        <Text>SignUP</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst ComStyles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n    borderWidth: 0,\r\n    borderRadius: 10,\r\n  },\r\n});\r\n\r\nconst MobStyles = StyleSheet.create({\r\n  container: {\r\n    margin: '2vw',\r\n    width: '96vw',\r\n    height: '20vh',\r\n    borderRadius: 10,\r\n  },\r\n});\r\n\r\nconst TabStyles = StyleSheet.create({\r\n  container: {},\r\n});\r\n\r\nconst PcStyles = StyleSheet.create({\r\n  container: {\r\n    margin: '2vw',\r\n    width: '96vw',\r\n    height: '20vh',\r\n    borderRadius: 10,\r\n  },\r\n});\r\n","import React, {useEffect} from 'react';\r\nimport {\r\n  Container,\r\n  Content,\r\n  List,\r\n  ListItem,\r\n  Thumbnail,\r\n  Text,\r\n  Left,\r\n  Body,\r\n  Right,\r\n  View,\r\n} from 'native-base';\r\nimport {QuantityView1} from '../common/quantityViews/QuantityView1';\r\nimport {connect} from 'react-redux';\r\nimport {cartListAction} from '../../redux/actions/CartListAction';\r\nimport {AddToCart, RemoveFromCart} from '../../services/CartUpdate';\r\n\r\nconst Cartitems = (props) => {\r\n  useEffect(() => {\r\n    //effect\r\n    console.log('))-' + JSON.stringify(props.cart));\r\n    return () => {\r\n      //cleanup\r\n    };\r\n  });\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        <List>\r\n          {props.cart.map(\r\n            (item, index) =>\r\n              item.currQty && (\r\n                <_ListItem\r\n                  item={item}\r\n                  key={index}\r\n                  cart={props.cart}\r\n                  cartListAction={props.cartListAction}\r\n                />\r\n              ),\r\n          )}\r\n        </List>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst _ListItem = (props) => {\r\n  const Add = async () => {\r\n    let r = AddToCart({\r\n      Product: props.item,\r\n      Cart: props.cart,\r\n      Qty: 1,\r\n    });\r\n    props.cartListAction({cartList: r.cartList});\r\n  };\r\n\r\n  const Remove = async () => {\r\n    let r = RemoveFromCart({\r\n      Cart: props.cart,\r\n      Qty: 1,\r\n      ProductName: props.item.ProductName,\r\n    });\r\n    props.cartListAction({cartList: r.cartList});\r\n  };\r\n  return (\r\n    <ListItem thumbnail>\r\n      <View>\r\n        <Left>\r\n          <Thumbnail\r\n            square\r\n            style={{width: 30, height: 30}}\r\n            source={{\r\n              uri:\r\n                'https://lh3.googleusercontent.com/coMv1dl31PCfEs6essJoEUwVryaqKHKQvENdZ_WYpN-PXa8Qfitkg3grQxIVN22W5A',\r\n            }}\r\n          />\r\n        </Left>\r\n      </View>\r\n      <Body>\r\n        <Text>{props.item.ProductName}</Text>\r\n        <Text note numberOfLines={1}>\r\n          Rich Source of Vitamin C...\r\n        </Text>\r\n      </Body>\r\n      <Right>\r\n        <QuantityView1 qty={props.item.currQty} Add={Add} Remove={Remove} />\r\n      </Right>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default CartItems = connect(\r\n  (state) => ({\r\n    cart: state.cartReducer.cartList,\r\n  }),\r\n  {cartListAction},\r\n)(Cartitems);\r\n","import React from 'react';\r\nimport {Row, Col, View, Text, Button} from 'native-base';\r\nimport {FontAwesome} from '@expo/vector-icons';\r\nimport {TouchableOpacity} from 'react-native-gesture-handler';\r\n\r\nexport const QuantityView1 = (props) => {\r\n  return (\r\n    <View style={{borderWidth: 1, paddingVertical: 0}}>\r\n      <Row>\r\n        <Col>\r\n          <TouchableOpacity onPress={props.Remove}>\r\n            <View\r\n              style={{\r\n                backgroundColor: '#aaa',\r\n                paddingHorizontal: 8,\r\n                paddingVertical: 8,\r\n                borderRadius: 5,\r\n              }}>\r\n              <FontAwesome style={{color: '#fff'}} name=\"minus\" />\r\n            </View>\r\n          </TouchableOpacity>\r\n        </Col>\r\n        <View\r\n          style={{\r\n            paddingHorizontal: 15,\r\n            justifyContent: 'center',\r\n          }}>\r\n          <Text style={{fontSize: 18, fontWeight: 'bold', color: '#aaa'}}>\r\n            {props.qty ? props.qty : 0}\r\n          </Text>\r\n        </View>\r\n        <Col>\r\n          <TouchableOpacity onPress={props.Add}>\r\n            <View\r\n              style={{\r\n                backgroundColor: '#aaa',\r\n                paddingHorizontal: 8,\r\n                paddingVertical: 8,\r\n                borderRadius: 5,\r\n              }}>\r\n              <FontAwesome style={{color: '#fff'}} name=\"plus\" />\r\n            </View>\r\n          </TouchableOpacity>\r\n        </Col>\r\n      </Row>\r\n    </View>\r\n  );\r\n};\r\n","import {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\r\nimport * as React from 'react';\r\nimport {View, Text} from 'react-native';\r\nimport TabBarIcon from '../../components/TabBarIcon';\r\nimport LinksScreen from '../screens/LinksScreen';\r\nimport {Button, Icon, Row} from 'native-base';\r\nimport StoreNavigation from './StoreNavigation';\r\n\r\nconst BottomTab = createBottomTabNavigator();\r\nconst INITIAL_ROUTE_NAME = 'Home';\r\n\r\nexport default function BottomTabNavigator({navigation, route}) {\r\n  navigation.setOptions({\r\n    headerTitle: (props) => (\r\n      <View style={{paddingRight: 5}}>\r\n        <Row>\r\n          <Text style={{fontWeight: 'bold', fontSize: 20, color: '#7a0'}}>\r\n            KickFresh\r\n          </Text>\r\n        </Row>\r\n        <Row>\r\n          <Text style={{color: '#aaa'}}>Store to Your Door</Text>\r\n        </Row>\r\n      </View>\r\n    ),\r\n    headerRight: () => (\r\n      <Button\r\n        transparent\r\n        onPress={() => {\r\n          navigation.navigate('Cart');\r\n        }}>\r\n        <View\r\n          style={{\r\n            justifyContent: 'center',\r\n            paddingHorizontal: 15,\r\n            borderWidth: 0,\r\n            /* backgroundColor: '#f00', */\r\n          }}>\r\n          <Icon name=\"cart\" style={{color: '#7a0'}} />\r\n        </View>\r\n      </Button>\r\n    ),\r\n  });\r\n\r\n  return (\r\n    <BottomTab.Navigator initialRouteName={INITIAL_ROUTE_NAME}>\r\n      <BottomTab.Screen\r\n        name=\"StoreNavigation\"\r\n        component={StoreNavigation}\r\n        options={{\r\n          title: 'StoreNavigation',\r\n          tabBarIcon: ({focused}) => (\r\n            <TabBarIcon focused={focused} name=\"md-code-working\" />\r\n          ),\r\n        }}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"Subscriptions\"\r\n        component={LinksScreen}\r\n        options={{\r\n          title: 'Subscriptions',\r\n          tabBarIcon: ({focused}) => (\r\n            <TabBarIcon focused={focused} name=\"md-book\" />\r\n          ),\r\n        }}\r\n      />\r\n    </BottomTab.Navigator>\r\n  );\r\n}\r\n\r\nfunction getHeaderTitle(route) {\r\n  const routeName =\r\n    route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME;\r\n\r\n  switch (routeName) {\r\n    case 'Home':\r\n      return 'FreshKick';\r\n    case 'Links':\r\n      return 'Links to learn more';\r\n  }\r\n}\r\n","import { Ionicons } from '@expo/vector-icons';\r\nimport * as React from 'react';\r\n\r\nimport Colors from '../constants/Colors';\r\n\r\nexport default function TabBarIcon(props) {\r\n  return (\r\n    <Ionicons\r\n      name={props.name}\r\n      size={30}\r\n      style={{ marginBottom: -3 }}\r\n      color={props.focused ? Colors.tabIconSelected : Colors.tabIconDefault}\r\n    />\r\n  );\r\n}\r\n","const tintColor = '#2f95dc';\r\n\r\nexport default {\r\n  tintColor,\r\n  tabIconDefault: '#ccc',\r\n  tabIconSelected: tintColor,\r\n  tabBar: '#fefefe',\r\n  errorBackground: 'red',\r\n  errorText: '#fff',\r\n  warningBackground: '#EAEB5E',\r\n  warningText: '#666804',\r\n  noticeBackground: tintColor,\r\n  noticeText: '#fff',\r\n};\r\n","import * as React from 'react';\r\nimport {StyleSheet, Text, View} from 'react-native';\r\n\r\nexport default function LinksScreen() {\r\n  return (\r\n    <View>\r\n      <Text>Link Screen</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fafafa',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport {createStackNavigator} from '@react-navigation/stack';\r\nimport HomeScreen from '../comp/homescreencomp/HomeScreen';\r\nimport SubCategory from '../comp/homescreencomp/subcategory/SubCategory';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default StoreNavigation = (props) => {\r\n  return (\r\n    <Stack.Navigator initialRouteName=\"StoreHome\">\r\n      <Stack.Screen name=\"StoreHome\" component={HomeScreen} />\r\n      <Stack.Screen name=\"SubCategory\" component={SubCategory} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\nimport {StyleSheet, Text, View, Dimensions, ScrollView} from 'react-native';\r\nimport TrendingRow from '../TrendingRow';\r\nimport {connect} from 'react-redux';\r\n//import { useFocusEffect } from \"@react-navigation/core\";\r\nimport BannerRow from '../BannerRow';\r\nimport CategoryList from './category/CategoryList';\r\n\r\nconst window = Dimensions.get('window');\r\nconst screen = Dimensions.get('screen');\r\n\r\nconst Homescreen = (props) => {\r\n  const [dimensions, setDimensions] = useState({window, screen});\r\n\r\n  props.navigation.setOptions({headerShown: false});\r\n\r\n  const onDimensionChange = ({window, screen}) => {\r\n    setDimensions({window, screen});\r\n  };\r\n\r\n  useEffect(() => {\r\n    Dimensions.addEventListener('change', onDimensionChange);\r\n    return () => {\r\n      Dimensions.removeEventListener('change', onDimensionChange);\r\n    };\r\n  });\r\n  return (\r\n    <ScrollView style={{backgroundColor: '#fff'}}>\r\n      <View\r\n        style={[\r\n          dimensions.window.width < 500\r\n            ? MobStyles.container\r\n            : PcStyles.container,\r\n          ComStyles.container,\r\n        ]}>\r\n        {/*PLACE: USP_BAR  */}\r\n        <BannerRow navigation={props.navigation} />\r\n        <TrendingRow navigation={props.navigation} />\r\n        <CategoryList navigation={props.navigation} dimensions={dimensions} />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nHomescreen.navigationOptions = {\r\n  header: null,\r\n};\r\n\r\nconst ComStyles = StyleSheet.create({\r\n  container: {\r\n    borderWidth: 0,\r\n  },\r\n});\r\n\r\nconst MobStyles = StyleSheet.create({\r\n  container: {},\r\n});\r\n\r\nconst TabStyles = StyleSheet.create({\r\n  container: {},\r\n});\r\n\r\nconst PcStyles = StyleSheet.create({\r\n  container: {marginHorizontal: 50},\r\n});\r\n\r\nexport default HomeScreen = connect((state) => ({\r\n  istate: state.cartReducer.cartList,\r\n}))(Homescreen);\r\n","import React from 'react';\r\nimport {View, Text, StyleSheet, FlatList} from 'react-native';\r\nimport ItemType1 from './common/itemViews/ItemType1';\r\nimport {useQuery} from '@apollo/client';\r\nimport {gql_trendingProducts} from '../services/gqls';\r\n\r\nexport default TrendingRow = (props) => {\r\n  const {loading, error, data} = useQuery(gql_trendingProducts);\r\n\r\n  if (loading)\r\n    return (\r\n      <View>\r\n        <Text>Loading...</Text>\r\n      </View>\r\n    );\r\n  if (error)\r\n    return (\r\n      <View>\r\n        <Text>{JSON.stringify(error.message)}</Text>\r\n      </View>\r\n    );\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text\r\n        style={{\r\n          color: '#aaa',\r\n          fontWeight: 'bold',\r\n          fontSize: 20,\r\n          marginTop: 10,\r\n          marginLeft: 5,\r\n        }}>\r\n        Trending Products\r\n      </Text>\r\n\r\n      <View>\r\n        <FlatList\r\n          horizontal\r\n          showsHorizontalScrollIndicator={false}\r\n          data={data.allProducts}\r\n          keyExtractor={(item, index) => 'key' + index}\r\n          renderItem={({item, index}) => {\r\n            return <ItemType1 item={item} />;\r\n          }}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: '100%',\r\n    borderWidth: 0,\r\n    marginLeft: 0,\r\n  },\r\n  head: {\r\n    justifyContent: 'center',\r\n    borderWidth: 0,\r\n  },\r\n});\r\n","import React, {useState} from 'react';\r\nimport {View, StyleSheet, Text, TouchableOpacity} from 'react-native';\r\nimport {FontAwesome} from '@expo/vector-icons';\r\n\r\nexport default AddView = (props) => {\r\n  const add = () => {\r\n    props.Add();\r\n  };\r\n  const remove = () => {\r\n    props.Remove();\r\n  };\r\n\r\n  if (props.Quantity) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.ItemAddView}>\r\n          <View style={styles.RemoveButton}>\r\n            <FontAwesome\r\n              name=\"minus\"\r\n              style={[, {color: '#fff', fontSize: 14}]}\r\n              onPress={remove}\r\n            />\r\n          </View>\r\n          <View style={styles.centerText}>\r\n            <Text style={styles.amountText}>{props.Quantity}</Text>\r\n          </View>\r\n          <View style={styles.AddButton}>\r\n            <FontAwesome\r\n              name=\"plus\"\r\n              style={[, {color: '#fff', fontSize: 14}]}\r\n              onPress={add}\r\n            />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <TouchableOpacity onPress={add}>\r\n        <View style={styles.container}>\r\n          <View\r\n            style={{\r\n              flex: 3.5,\r\n              backgroundColor: '#af0',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              paddingVertical: 3,\r\n            }}>\r\n            <Text style={{color: '#fff', fontSize: 18, fontWeight: 'bold'}}>\r\n              ADD\r\n            </Text>\r\n          </View>\r\n          <View\r\n            style={{\r\n              flex: 1.5,\r\n              backgroundColor: '#0f9',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}>\r\n            <FontAwesome\r\n              name=\"plus\"\r\n              style={{\r\n                color: '#fff',\r\n                fontSize: 18,\r\n              }}\r\n            />\r\n          </View>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 3,\r\n    width: '100%',\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    borderRadius: 80,\r\n    overflow: 'hidden',\r\n  },\r\n  itemImage: {\r\n    height: '70%',\r\n    borderWidth: 0,\r\n    borderColor: '#0f0',\r\n  },\r\n  ItemAddView: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderWidth: 0,\r\n    borderColor: '#f00',\r\n    paddingVertical: 2,\r\n  },\r\n  AddButton: {\r\n    width: 22,\r\n    height: 22,\r\n    backgroundColor: '#0a0',\r\n    padding: 2,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderWidth: 0,\r\n    borderRadius: 4,\r\n  },\r\n  RemoveButton: {\r\n    width: 22,\r\n    height: 22,\r\n    backgroundColor: '#0a0',\r\n    padding: 2,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderWidth: 0,\r\n    borderRadius: 4,\r\n  },\r\n  centerText: {\r\n    flex: 0.8,\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n    borderWidth: 0,\r\n  },\r\n  amountText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    color: '#aaa',\r\n  },\r\n  button: {\r\n    backgroundColor: 'transparent',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, Dimensions } from \"react-native\";\r\nimport Carousel from \"react-native-snap-carousel\";\r\n\r\nlet carouselItems = [\r\n  {\r\n    title: \"Item 1\",\r\n    text: \"Text 1\"\r\n  },\r\n  {\r\n    title: \"Item 2\",\r\n    text: \"Text 2\"\r\n  },\r\n  {\r\n    title: \"Item 3\",\r\n    text: \"Text 3\"\r\n  },\r\n  {\r\n    title: \"Item 4\",\r\n    text: \"Text 4\"\r\n  },\r\n  {\r\n    title: \"Item 5\",\r\n    text: \"Text 5\"\r\n  }\r\n];\r\n\r\nconst window = Dimensions.get(\"window\");\r\nconst screen = Dimensions.get(\"screen\");\r\n\r\nexport default BannerRow = props => {\r\n  const [dimensions, setDimensions] = useState({ window, screen });\r\n\r\n  const onChange = ({ window, screen }) => {\r\n    setDimensions({ window, screen });\r\n  };\r\n  useEffect(() => {\r\n    Dimensions.addEventListener(\"change\", onChange);\r\n    return () => {\r\n      Dimensions.removeEventListener(\"change\", onChange);\r\n    };\r\n  });\r\n  return (\r\n    <View\r\n      style={{\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n      }}\r\n    >\r\n      <Carousel\r\n        layout={\"default\"}\r\n        ref={ref => (this.carousel = ref)}\r\n        data={carouselItems}\r\n        sliderWidth={dimensions.window.width}\r\n        itemWidth={dimensions.window.width}\r\n        renderItem={_renderItem}\r\n        //useNativeDriver={false}\r\n        //onSnapToItem = { index => this.setState({activeIndex:index}) }\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\n_renderItem = ({ item, index }) => {\r\n  return (\r\n    <View\r\n      style={{\r\n        backgroundColor: \"floralwhite\",\r\n        borderRadius: 5,\r\n        height: 250,\r\n        padding: 50,\r\n        marginLeft: 25,\r\n        marginRight: 25\r\n      }}\r\n    >\r\n      <Text style={{ fontSize: 30 }}>{item.title}</Text>\r\n      <Text>{item.text}</Text>\r\n    </View>\r\n  );\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {View, StyleSheet, Text} from 'react-native';\r\nimport Category from './Category';\r\n//-->GQL Imports\r\nimport {useQuery} from '@apollo/client';\r\nimport {gql_allCatogries} from '../../../services/gqls';\r\n\r\nconst CategoryList = (props) => {\r\n  const {loading, error, data} = useQuery(gql_allCatogries);\r\n\r\n  useEffect(() => {\r\n    //effect\r\n\r\n    return () => {\r\n      //cleanup\r\n    };\r\n  });\r\n\r\n  if (loading)\r\n    return (\r\n      <View>\r\n        <Text>Loading...</Text>\r\n      </View>\r\n    );\r\n  if (error)\r\n    return (\r\n      <View>\r\n        <Text>{JSON.stringify(error.message)}</Text>\r\n      </View>\r\n    );\r\n  return (\r\n    <Category\r\n      data={data.allCategories}\r\n      dimensions={props.dimensions}\r\n      navigation={props.navigation}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CategoryList;\r\n\r\nconst ComStyles = StyleSheet.create({\r\n  container: {\r\n    borderWidth: 0,\r\n  },\r\n});\r\n\r\nconst MobStyles = StyleSheet.create({\r\n  container: {},\r\n});\r\n\r\nconst TabStyles = StyleSheet.create({\r\n  container: {},\r\n});\r\n\r\nconst PcStyles = StyleSheet.create({\r\n  container: {},\r\n});\r\n","import React, {useState} from 'react';\r\nimport {Text, TouchableOpacity, Image} from 'react-native';\r\nimport {View, Row, Col, Left, Body, Right, Accordion, Grid} from 'native-base';\r\nimport {FontAwesome} from '@expo/vector-icons';\r\nimport GridView from 'react-native-super-grid';\r\n\r\nexport default Category = (props) => {\r\n  let {navigation} = props;\r\n  const CustomHeader = (props) => {\r\n    return (\r\n      <Row\r\n        style={{\r\n          borderRadius: 5,\r\n          marginTop: 15,\r\n          marginHorizontal: 5,\r\n          shadowColor: '#000',\r\n          shadowOffset: {\r\n            width: 0,\r\n            height: 0,\r\n          },\r\n          shadowOpacity: 0.25,\r\n          shadowRadius: 5,\r\n          elevation: 5,\r\n        }}>\r\n        <Col style={{overflow: 'hidden', flex: 4}}>\r\n          <Row\r\n            style={{\r\n              alignItems: 'center',\r\n              paddingHorizontal: 20,\r\n              paddingVertical: 10,\r\n            }}>\r\n            <View\r\n              style={{\r\n                height: 70,\r\n                width: 100,\r\n                borderWidth: 0,\r\n                borderColor: '#00f',\r\n              }}>\r\n              <Image\r\n                style={{width: 100, height: 70}}\r\n                source={{\r\n                  uri:\r\n                    'http://localhost:3000/static/images/productImages/' +\r\n                    props.Category +\r\n                    '/' +\r\n                    props.Category +\r\n                    '.png',\r\n                }}\r\n              />\r\n            </View>\r\n            <View style={{marginLeft: 20}}>\r\n              <Row>\r\n                <View\r\n                  style={{\r\n                    backgroundColor: '#0a0',\r\n                    borderRadius: 10,\r\n                    paddingHorizontal: 5,\r\n                    paddingVertical: 2,\r\n                    justifyContent: 'center',\r\n                    marginBottom: 5,\r\n                  }}>\r\n                  <Text\r\n                    style={{fontSize: 10, fontWeight: '600', color: '#fff'}}>\r\n                    offer upto 20%\r\n                  </Text>\r\n                </View>\r\n              </Row>\r\n              <Row>\r\n                <Text style={{fontSize: 15, color: '#aaa', fontWeight: '600'}}>\r\n                  {props.Category}\r\n                </Text>\r\n              </Row>\r\n              <Row>\r\n                <Text style={{color: '#aaa', fontSize: 10}}>\r\n                  {props.SubCategory.map((Item) => {\r\n                    return Item.SubCategory + ', ';\r\n                  })}\r\n                </Text>\r\n              </Row>\r\n            </View>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col\r\n          style={{\r\n            borderColor: '#0a0',\r\n            borderWidth: 0,\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'flex-end',\r\n          }}>\r\n          <View\r\n            style={{\r\n              height: 70,\r\n              width: 60,\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              borderLeftWidth: 1,\r\n              borderColor: '#aaa',\r\n            }}>\r\n            <FontAwesome\r\n              name=\"chevron-down\"\r\n              style={{color: '#aaa', fontSize: 22}}\r\n            />\r\n          </View>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  const CustomContent = (props) => {\r\n    return (\r\n      <View style={{marginLeft: 0}}>\r\n        <GridView\r\n          itemDimension={100}\r\n          spacing={10}\r\n          items={props.SubCategory}\r\n          renderItem={(item, index) => (\r\n            <TouchableOpacity\r\n              key={index}\r\n              style={{alignSelf: 'center'}}\r\n              onPress={() => {\r\n                navigation.navigate('SubCategory', {\r\n                  SubCategory: item.item,\r\n                  CategoryList: props.SubCategory,\r\n                });\r\n              }}>\r\n              <View style={{width: 100}}>\r\n                <View\r\n                  //IMAGE\r\n                  style={{\r\n                    height: 100,\r\n                    width: 100,\r\n                    borderWidth: 1,\r\n                  }}></View>\r\n                <Text\r\n                  style={{\r\n                    color: '#aaa',\r\n                    fontSize: 10,\r\n                    fontWeight: '600',\r\n                    textAlign: 'center',\r\n                  }}>\r\n                  {item.item.SubCategory}\r\n                </Text>\r\n                <View\r\n                  style={{\r\n                    backgroundColor: '#0a0',\r\n                    paddingHorizontal: 5,\r\n                    paddingVertical: 2,\r\n                    alignSelf: 'center',\r\n                    borderRadius: 10,\r\n                  }}>\r\n                  <Text style={{fontWeight: '600', fontSize: 8, color: '#fff'}}>\r\n                    upto 20% off\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n            </TouchableOpacity>\r\n          )}\r\n        />\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        ComStyles.container,\r\n        props.dimensions.window.width < 500\r\n          ? MobStyles.container\r\n          : PcStyles.container,\r\n      ]}>\r\n      <Accordion\r\n        style={{borderWidth: 0}}\r\n        dataArray={props.data}\r\n        animation={true}\r\n        expanded={true}\r\n        renderHeader={CustomHeader}\r\n        renderContent={CustomContent}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nimport {StyleSheet} from 'react-native';\r\n\r\nconst ComStyles = StyleSheet.create({\r\n  container: {\r\n    borderWidth: 0,\r\n  },\r\n  Row: {},\r\n});\r\n\r\nconst MobStyles = StyleSheet.create({\r\n  container: {},\r\n});\r\n\r\nconst TabStyles = StyleSheet.create({\r\n  container: {},\r\n});\r\n\r\nconst PcStyles = StyleSheet.create({\r\n  container: {},\r\n});\r\n"],"sourceRoot":""}